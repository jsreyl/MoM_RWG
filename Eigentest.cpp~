#include<iostream>
#include<Eigen>
#include<typeinfo>
#include "g.h"
#include "trymesh3D.h"

int main(){
  Eigen::MatrixXd a(1,2);
  Eigen::MatrixXd b(1,2);
  /*  a.row(0)<<1,2;
  b=a;
  a.resize(2,2);
  a.row(0)=b.row(0);
  a.row(1)<<2,3;
  b=a;
  a.resize(3,2);
  a.row(0)=b.row(0);
  a.row(1)=b.row(1);
  a.row(2)=3,4;*/
  /*a.row(0)<<0,1;
  b=a;
  for(int i=1;i<=10;i++){
    a.resize(i+1,2);
    for(int j=0;j<i;j++) a.row(j)=b.row(j);
    a.row(i)<<i,i+1;
    b=a;
  }
  std::cout<<"a\n"<<a<<std::endl;
  g_a<<1,2;
  std::cout<<"g_a\n"<<g_a<<std::endl;*/
  //  auto c = Eigen::Vector3i(3);
  //  c<<1,2,3;
  //  std::cout<<c<<std::endl;
  /*TryMesh3D(2,4.5,4,5,a,&a,&a);
  std::cout<<"a\n"<<a<<std::endl;
  std::cout<<"g_a\n"<<g_a<<std::endl;
  TryMesh3D(3,4.5,5,5,a,&a,&a);
  std::cout<<"a\n"<<a<<std::endl;
  std::cout<<"g_a\n"<<g_a<<std::endl;*/
  /*Eigen::MatrixXd m=Eigen::MatrixXd::Random(3,3);
  std::cout<<m<<std::endl;
  Eigen::Vector3d v;
  v(0)=m.col(0).maxCoeff();
  v(1)=m.col(1).maxCoeff();
  v(2)=m.col(2).maxCoeff();
  std::cout<<v<<std::endl;*/
  Eigen::MatrixXd m(3,3);
  Eigen::VectorXd v1(3);
  Eigen::VectorXd v2(3);
  Eigen::VectorXd v3(3);
  v1<<1,2,3;
  v2<<2,3,4;
  v3<<3,4,5;
  m.col(0)=v1;  m.col(1)=v2;  m.col(2)=v3;
  std::cout<<m<<std::endl;
}
